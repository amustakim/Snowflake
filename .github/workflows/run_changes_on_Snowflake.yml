# Workflow that supports versions, goes in ~/.github/workflows/deploy.yaml

name: run snowflake 2

# Controls when the workflow will run
on:
  # Triggers the workflow on any branch or tag commit
  push:
    branches:
      - "*"
    tags:
      - "v*"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      SNOWSQL_PWD: ${{ secrets.SNOWFLAKE_PASSWORD }}
      SNOWSQL_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
      SNOWSQL_USER: ${{ secrets.SNOWFLAKE_USER }}
      SNOWSQL_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
      SNOWSQL_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}
      SNOWSQL_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
      SNOWSQL_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
      SNOWSQL_DEST: ~/snowflake

    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v34
        with:
          path: SQL
      - name: Download SnowSQL
        run: curl -O https://sfc-repo.snowflakecomputing.com/snowsql/bootstrap/1.2/linux_x86_64/snowsql-1.2.9-linux_x86_64.bash
      - name: Install SnowSQL
        run: SNOWSQL_DEST=~/snowflake SNOWSQL_LOGIN_SHELL=~/.profile bash snowsql-1.2.9-linux_x86_64.bash
      - name: Test installation
        run: ~/snowflake/snowsql -v
      - name: Execute SQL from all changed files against Snowflake
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            if [[ $file == *.sql ]]; 
            then 
                echo "$file was changed"
                python .github/validate.py $file
                 ~/snowflake/snowsql -f $file
            fi
          done
      # - name: Execute SQL against Snowflake
      #   run:  ~/snowflake/snowsql -f ./SQL/DUMMY.sql;
